
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORELSEleftANDALSOleftNOTleftNOTEQUALLESSERTHANLESSEQUALGREATTHANGREATEQUALEQUALleftINCONleftPLUSMINUSleftMULTDIVIDEDIVMODrightPOWERrightNEGAleftLEFTBRACKETRIGHTBRACKETleftLEFT_PARENTHESISRIGHT_PARENTHESISANDALSO BOOLEAN COLON COM CON DIV DIVIDE ELSE EQ EQUAL FUN GREATEQUAL GREATTHAN HASH IF IN INTEGER LCURLY LEFTBRACKET LEFT_PARENTHESIS LESSEQUAL LESSERTHAN MINUS MOD MULT NOT NOTEQUAL NUMBER ORELSE PLUS POWER PRINT RCURLY RIGHTBRACKET RIGHT_PARENTHESIS STRING VAR WHILE\n    program : block\n    program : functionlist blockfunctionlist : functionlist function\n                    | function\n    function : FUN VAR LEFT_PARENTHESIS listel RIGHT_PARENTHESIS EQ block expression COLON\n    block : LCURLY block RCURLYstatement : blockstatement : stlist COLONstatement : while_statlistel : VARstatement : if_else_statstatement : if_statstatement : print COLONstatement : expression COLONblock : LCURLY statementlist RCURLY\n             | LCURLY RCURLYlistel : listel COM VARstatementlist : statementlist statement\n              | statementwhile_stat : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS blockif_else_stat : if_stat ELSE blockif_stat : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS blockstlist : VAR EQ expression\n              | expression LEFTBRACKET expression RIGHTBRACKET EQ expression print : PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n    expression : VAR LEFT_PARENTHESIS listel RIGHT_PARENTHESIS\n    expression : LEFT_PARENTHESIS expression RIGHT_PARENTHESISexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression MULT expression\n                      | expression DIVIDE expression\n                      | expression POWER expression\n                      | expression MOD expression\n                      | expression DIV expressionlistel : listel COM expression\n                | expressionexpression : expression CON expressiontupexp : LEFT_PARENTHESIS listel RIGHT_PARENTHESIS\n             | LEFT_PARENTHESIS RIGHT_PARENTHESISlist : LEFTBRACKET listel RIGHTBRACKET\n            | LEFTBRACKET RIGHTBRACKETgetv : HASH expression LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                | HASH expression expression getv : expression LEFTBRACKET expression RIGHTBRACKETexpression : expression ORELSE expression\n                  | expression ANDALSO expressionexpression : MINUS expression %prec NEGAexpression : NOT expressionexpression : expression IN expressionexpression : expression LESSERTHAN expression\n                  | expression LESSEQUAL expression\n                  | expression GREATTHAN expression\n                  | expression GREATEQUAL expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expressionexpression : term\n                  | getvterm : INTEGERterm : STRINGterm : VARterm : listterm : tupexpterm : NUMBERterm : BOOLEAN'
    
_lr_action_items = {'LCURLY':([0,3,4,5,8,9,10,11,12,14,15,16,37,38,39,40,41,42,43,44,81,120,121,129,130,132,136,],[4,4,4,-4,-3,-7,-16,4,-19,-9,-11,-12,-6,-15,-18,-7,-8,4,-13,-14,-21,4,4,-20,-22,4,-5,]),'FUN':([0,3,5,8,136,],[6,6,-4,-3,-5,]),'$end':([1,2,7,10,37,38,],[0,-1,-2,-16,-6,-15,]),'RCURLY':([4,9,10,11,12,14,15,16,37,38,39,40,41,43,44,81,129,130,],[10,37,-16,38,-19,-9,-11,-12,-6,-15,-18,-7,-8,-13,-14,-21,-20,-22,]),'VAR':([4,6,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[19,36,-7,-16,19,-19,-9,-11,-12,67,73,77,77,-56,-57,-58,-59,-61,-62,-63,-64,77,-6,-15,-18,-7,-8,-13,-14,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,67,-41,77,-39,77,77,-47,-60,-48,77,67,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,117,77,-27,-38,-43,73,77,73,-26,-29,77,-44,-20,-22,-27,77,]),'WHILE':([4,9,10,11,12,14,15,16,37,38,39,40,41,43,44,81,129,130,],[21,-7,-16,21,-19,-9,-11,-12,-6,-15,-18,-7,-8,-13,-14,-21,-20,-22,]),'IF':([4,9,10,11,12,14,15,16,37,38,39,40,41,43,44,81,129,130,],[23,-7,-16,23,-19,-9,-11,-12,-6,-15,-18,-7,-8,-13,-14,-21,-20,-22,]),'PRINT':([4,9,10,11,12,14,15,16,37,38,39,40,41,43,44,81,129,130,],[24,-7,-16,24,-19,-9,-11,-12,-6,-15,-18,-7,-8,-13,-14,-21,-20,-22,]),'LEFT_PARENTHESIS':([4,9,10,11,12,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,69,71,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,117,124,127,128,129,130,131,134,],[22,-7,-16,22,-19,-9,-11,-12,64,22,69,22,74,75,22,22,-56,-57,-58,-59,-61,-62,-63,-64,22,80,-6,-15,-18,-7,-8,-13,-14,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-41,64,22,-39,64,22,22,-47,64,-48,111,22,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,22,22,-27,-38,-43,22,22,22,-26,64,-29,22,-44,-20,-22,-27,22,]),'MINUS':([4,9,10,11,12,14,15,16,18,19,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,123,124,125,127,128,129,130,131,133,134,135,],[25,-7,-16,25,-19,-9,-11,-12,47,-60,25,25,25,25,-56,-57,-58,-59,-61,-62,-63,-64,25,-6,-15,-18,-7,-8,-13,-14,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-41,-60,47,25,47,-39,-60,25,25,-47,-60,47,112,25,-21,47,-28,-29,-30,-31,-32,-33,-34,47,47,47,47,47,47,47,47,47,47,47,-40,25,25,47,-27,-38,47,47,47,25,25,25,-44,-26,-60,47,47,47,-29,47,25,-44,-20,-22,-27,47,25,47,]),'NOT':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[26,-7,-16,26,-19,-9,-11,-12,26,26,26,26,-56,-57,-58,-59,-61,-62,-63,-64,26,-6,-15,-18,-7,-8,-13,-14,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-41,26,-39,26,26,-47,-60,-48,26,26,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,26,26,-27,-38,-43,26,26,26,-26,-29,26,-44,-20,-22,-27,26,]),'INTEGER':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[29,-7,-16,29,-19,-9,-11,-12,29,29,29,29,-56,-57,-58,-59,-61,-62,-63,-64,29,-6,-15,-18,-7,-8,-13,-14,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-41,29,-39,29,29,-47,-60,-48,29,29,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,29,29,-27,-38,-43,29,29,29,-26,-29,29,-44,-20,-22,-27,29,]),'STRING':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[30,-7,-16,30,-19,-9,-11,-12,30,30,30,30,-56,-57,-58,-59,-61,-62,-63,-64,30,-6,-15,-18,-7,-8,-13,-14,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-41,30,-39,30,30,-47,-60,-48,30,30,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,30,30,-27,-38,-43,30,30,30,-26,-29,30,-44,-20,-22,-27,30,]),'NUMBER':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[33,-7,-16,33,-19,-9,-11,-12,33,33,33,33,-56,-57,-58,-59,-61,-62,-63,-64,33,-6,-15,-18,-7,-8,-13,-14,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-41,33,-39,33,33,-47,-60,-48,33,33,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,33,33,-27,-38,-43,33,33,33,-26,-29,33,-44,-20,-22,-27,33,]),'BOOLEAN':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[34,-7,-16,34,-19,-9,-11,-12,34,34,34,34,-56,-57,-58,-59,-61,-62,-63,-64,34,-6,-15,-18,-7,-8,-13,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-41,34,-39,34,34,-47,-60,-48,34,34,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,34,34,-27,-38,-43,34,34,34,-26,-29,34,-44,-20,-22,-27,34,]),'HASH':([4,9,10,11,12,14,15,16,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,106,107,110,111,112,113,116,124,127,128,129,130,131,134,],[35,-7,-16,35,-19,-9,-11,-12,35,35,35,35,-56,-57,-58,-59,-61,-62,-63,-64,35,-6,-15,-18,-7,-8,-13,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-41,35,-39,35,35,-47,-60,-48,35,35,-21,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,35,35,-27,-38,-43,35,35,35,-26,-29,35,-44,-20,-22,-27,35,]),'LEFTBRACKET':([4,9,10,11,12,14,15,16,18,19,20,22,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,123,124,125,127,128,129,130,131,133,134,135,],[20,-7,-16,20,-19,-9,-11,-12,45,-60,20,20,20,20,-56,-57,-58,-59,-61,-62,-63,-64,20,-6,-15,-18,-7,-8,-13,-14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-41,-60,104,20,104,-39,-60,20,20,104,-60,104,113,20,-21,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-40,20,20,104,-27,-38,104,104,104,20,20,20,-44,-26,-60,104,104,104,104,104,20,-44,-20,-22,-27,104,20,104,]),'ELSE':([10,16,37,38,130,],[-16,42,-6,-15,-22,]),'COLON':([13,17,18,19,27,28,29,30,31,32,33,34,66,71,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,106,107,110,115,116,122,124,128,131,133,135,],[41,43,44,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-39,-47,-60,-48,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-23,-40,-27,-38,-43,-44,-26,-25,-47,-44,-27,-24,136,]),'PLUS':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[46,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,46,46,-39,-60,-47,-60,46,46,46,-28,-29,-30,-31,-32,-33,-34,46,46,46,46,46,46,46,46,46,46,46,-40,46,-27,-38,46,46,46,-44,-26,-60,46,46,46,-29,46,-44,-27,46,46,]),'MULT':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[48,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,48,48,-39,-60,-47,-60,48,48,48,48,48,-30,-31,-32,-33,-34,48,48,48,48,48,48,48,48,48,48,48,-40,48,-27,-38,48,48,48,-44,-26,-60,48,48,48,48,48,-44,-27,48,48,]),'DIVIDE':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[49,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,49,49,-39,-60,-47,-60,49,49,49,49,49,-30,-31,-32,-33,-34,49,49,49,49,49,49,49,49,49,49,49,-40,49,-27,-38,49,49,49,-44,-26,-60,49,49,49,49,49,-44,-27,49,49,]),'POWER':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[50,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,50,50,-39,-60,-47,-60,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-40,50,-27,-38,50,50,50,-44,-26,-60,50,50,50,50,50,-44,-27,50,50,]),'MOD':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[51,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,51,51,-39,-60,-47,-60,51,51,51,51,51,-30,-31,-32,-33,-34,51,51,51,51,51,51,51,51,51,51,51,-40,51,-27,-38,51,51,51,-44,-26,-60,51,51,51,51,51,-44,-27,51,51,]),'DIV':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[52,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,52,52,-39,-60,-47,-60,52,52,52,52,52,-30,-31,-32,-33,-34,52,52,52,52,52,52,52,52,52,52,52,-40,52,-27,-38,52,52,52,-44,-26,-60,52,52,52,52,52,-44,-27,52,52,]),'CON':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[53,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,53,53,-39,-60,-47,-60,53,53,53,-28,-29,-30,-31,-32,-33,-34,-37,53,53,-49,53,53,53,53,53,53,53,-40,53,-27,-38,53,53,53,-44,-26,-60,53,53,53,-29,53,-44,-27,53,53,]),'ORELSE':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[54,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,54,54,-39,-60,-47,-60,-48,54,54,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,54,-40,54,-27,-38,54,54,54,-44,-26,-60,54,54,54,-29,54,-44,-27,54,54,]),'ANDALSO':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[55,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,55,55,-39,-60,-47,-60,-48,55,55,-28,-29,-30,-31,-32,-33,-34,-37,55,-46,-49,-50,-51,-52,-53,-54,-55,55,-40,55,-27,-38,55,55,55,-44,-26,-60,55,55,55,-29,55,-44,-27,55,55,]),'IN':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[56,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,56,56,-39,-60,-47,-60,56,56,56,-28,-29,-30,-31,-32,-33,-34,-37,56,56,-49,56,56,56,56,56,56,56,-40,56,-27,-38,56,56,56,-44,-26,-60,56,56,56,-29,56,-44,-27,56,56,]),'LESSERTHAN':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[57,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,57,57,-39,-60,-47,-60,57,57,57,-28,-29,-30,-31,-32,-33,-34,-37,57,57,-49,-50,-51,-52,-53,-54,-55,57,-40,57,-27,-38,57,57,57,-44,-26,-60,57,57,57,-29,57,-44,-27,57,57,]),'LESSEQUAL':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[58,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,58,58,-39,-60,-47,-60,58,58,58,-28,-29,-30,-31,-32,-33,-34,-37,58,58,-49,-50,-51,-52,-53,-54,-55,58,-40,58,-27,-38,58,58,58,-44,-26,-60,58,58,58,-29,58,-44,-27,58,58,]),'GREATTHAN':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[59,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,59,59,-39,-60,-47,-60,59,59,59,-28,-29,-30,-31,-32,-33,-34,-37,59,59,-49,-50,-51,-52,-53,-54,-55,59,-40,59,-27,-38,59,59,59,-44,-26,-60,59,59,59,-29,59,-44,-27,59,59,]),'GREATEQUAL':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[60,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,60,60,-39,-60,-47,-60,60,60,60,-28,-29,-30,-31,-32,-33,-34,-37,60,60,-49,-50,-51,-52,-53,-54,-55,60,-40,60,-27,-38,60,60,60,-44,-26,-60,60,60,60,-29,60,-44,-27,60,60,]),'EQUAL':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[61,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,61,61,-39,-60,-47,-60,61,61,61,-28,-29,-30,-31,-32,-33,-34,-37,61,61,-49,-50,-51,-52,-53,-54,-55,61,-40,61,-27,-38,61,61,61,-44,-26,-60,61,61,61,-29,61,-44,-27,61,61,]),'NOTEQUAL':([18,19,27,28,29,30,31,32,33,34,66,67,68,70,71,73,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,115,116,117,118,119,123,124,125,128,131,133,135,],[62,-60,-56,-57,-58,-59,-61,-62,-63,-64,-41,-60,62,62,-39,-60,-47,-60,62,62,62,-28,-29,-30,-31,-32,-33,-34,-37,62,62,-49,-50,-51,-52,-53,-54,-55,62,-40,62,-27,-38,62,62,62,-44,-26,-60,62,62,62,-29,62,-44,-27,62,62,]),'EQ':([19,115,126,],[63,127,132,]),'RIGHTBRACKET':([20,27,28,29,30,31,32,33,34,65,66,67,68,71,73,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,106,107,110,113,116,117,118,119,124,125,128,131,],[66,-56,-57,-58,-59,-61,-62,-63,-64,102,-41,-10,-36,-39,-10,-47,-60,-48,115,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,-40,-27,-38,-43,66,-26,-17,-35,128,-47,128,-44,-27,]),'RIGHT_PARENTHESIS':([22,27,28,29,30,31,32,33,34,66,67,68,70,71,72,73,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,106,107,108,109,110,111,114,116,117,118,123,124,128,131,],[71,-56,-57,-58,-59,-61,-62,-63,-64,-41,-10,-36,106,-39,107,-10,-47,-60,-48,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,116,-40,120,-27,-38,121,122,-43,71,126,-26,-17,-35,131,-47,-44,-27,]),'COM':([27,28,29,30,31,32,33,34,65,66,67,68,70,71,72,73,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,106,107,110,114,116,117,118,123,124,125,128,131,],[-56,-57,-58,-59,-61,-62,-63,-64,103,-41,-10,-36,-36,-39,103,-10,-47,-60,-48,-28,-29,-30,-31,-32,-33,-34,-37,-45,-46,-49,-50,-51,-52,-53,-54,-55,103,-40,-27,-38,-43,103,-26,-17,-35,-36,-47,-36,-44,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,3,4,11,42,120,121,132,],[2,7,9,40,81,129,130,134,]),'functionlist':([0,],[3,]),'function':([0,3,],[5,8,]),'statementlist':([4,],[11,]),'statement':([4,11,],[12,39,]),'stlist':([4,11,],[13,13,]),'while_stat':([4,11,],[14,14,]),'if_else_stat':([4,11,],[15,15,]),'if_stat':([4,11,],[16,16,]),'print':([4,11,],[17,17,]),'expression':([4,11,20,22,25,26,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,79,80,103,104,111,112,113,127,134,],[18,18,68,70,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,68,105,108,109,110,68,118,119,123,124,125,133,135,]),'term':([4,11,20,22,25,26,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,79,80,103,104,111,112,113,127,134,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'getv':([4,11,20,22,25,26,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,79,80,103,104,111,112,113,127,134,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'list':([4,11,20,22,25,26,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,79,80,103,104,111,112,113,127,134,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'tupexp':([4,11,20,22,25,26,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,79,80,103,104,111,112,113,127,134,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'listel':([20,22,64,80,111,113,],[65,72,101,114,72,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program_block','sbml.py',490),
  ('program -> functionlist block','program',2,'p_program','sbml.py',507),
  ('functionlist -> functionlist function','functionlist',2,'p_funclist','sbml.py',511),
  ('functionlist -> function','functionlist',1,'p_funclist','sbml.py',512),
  ('function -> FUN VAR LEFT_PARENTHESIS listel RIGHT_PARENTHESIS EQ block expression COLON','function',9,'p_function','sbml.py',520),
  ('block -> LCURLY block RCURLY','block',3,'p_block','sbml.py',526),
  ('statement -> block','statement',1,'p_stat','sbml.py',531),
  ('statement -> stlist COLON','statement',2,'p_statone','sbml.py',535),
  ('statement -> while_stat','statement',1,'p_statsix','sbml.py',539),
  ('listel -> VAR','listel',1,'p_listel','sbml.py',542),
  ('statement -> if_else_stat','statement',1,'p_statfour','sbml.py',546),
  ('statement -> if_stat','statement',1,'p_statfive','sbml.py',549),
  ('statement -> print COLON','statement',2,'p_stattwo','sbml.py',553),
  ('statement -> expression COLON','statement',2,'p_statthree','sbml.py',557),
  ('block -> LCURLY statementlist RCURLY','block',3,'p_block_stlst','sbml.py',560),
  ('block -> LCURLY RCURLY','block',2,'p_block_stlst','sbml.py',561),
  ('listel -> listel COM VAR','listel',3,'p_elements','sbml.py',568),
  ('statementlist -> statementlist statement','statementlist',2,'p_stlist','sbml.py',574),
  ('statementlist -> statement','statementlist',1,'p_stlist','sbml.py',575),
  ('while_stat -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS block','while_stat',5,'p_while','sbml.py',582),
  ('if_else_stat -> if_stat ELSE block','if_else_stat',3,'p_stat_ifelse','sbml.py',587),
  ('if_stat -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS block','if_stat',5,'p_stat_ifcond','sbml.py',592),
  ('stlist -> VAR EQ expression','stlist',3,'p_var_fun','sbml.py',596),
  ('stlist -> expression LEFTBRACKET expression RIGHTBRACKET EQ expression','stlist',6,'p_var_fun','sbml.py',597),
  ('print -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','print',4,'p_st_print','sbml.py',606),
  ('expression -> VAR LEFT_PARENTHESIS listel RIGHT_PARENTHESIS','expression',4,'p_expression_func_call','sbml.py',612),
  ('expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','expression',3,'p_factor_expr','sbml.py',617),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sbml.py',621),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sbml.py',622),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','sbml.py',623),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sbml.py',624),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sbml.py',625),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','sbml.py',626),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','sbml.py',627),
  ('listel -> listel COM expression','listel',3,'p_exp_list','sbml.py',633),
  ('listel -> expression','listel',1,'p_exp_list','sbml.py',634),
  ('expression -> expression CON expression','expression',3,'p_expression_cons','sbml.py',642),
  ('tupexp -> LEFT_PARENTHESIS listel RIGHT_PARENTHESIS','tupexp',3,'p_exp_tuple','sbml.py',646),
  ('tupexp -> LEFT_PARENTHESIS RIGHT_PARENTHESIS','tupexp',2,'p_exp_tuple','sbml.py',647),
  ('list -> LEFTBRACKET listel RIGHTBRACKET','list',3,'p_expre_list','sbml.py',654),
  ('list -> LEFTBRACKET RIGHTBRACKET','list',2,'p_expre_list','sbml.py',655),
  ('getv -> HASH expression LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','getv',5,'p_exp_tup_','sbml.py',662),
  ('getv -> HASH expression expression','getv',3,'p_exp_tup_','sbml.py',663),
  ('getv -> expression LEFTBRACKET expression RIGHTBRACKET','getv',4,'p_expression_list_index','sbml.py',670),
  ('expression -> expression ORELSE expression','expression',3,'p_expression_booleanop','sbml.py',674),
  ('expression -> expression ANDALSO expression','expression',3,'p_expression_booleanop','sbml.py',675),
  ('expression -> MINUS expression','expression',2,'p_expression_neg','sbml.py',679),
  ('expression -> NOT expression','expression',2,'p_expression_booleannot','sbml.py',683),
  ('expression -> expression IN expression','expression',3,'p_expression_in','sbml.py',688),
  ('expression -> expression LESSERTHAN expression','expression',3,'p_expression_compare','sbml.py',695),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression_compare','sbml.py',696),
  ('expression -> expression GREATTHAN expression','expression',3,'p_expression_compare','sbml.py',697),
  ('expression -> expression GREATEQUAL expression','expression',3,'p_expression_compare','sbml.py',698),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_compare','sbml.py',699),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_compare','sbml.py',700),
  ('expression -> term','expression',1,'p_expression_factor','sbml.py',707),
  ('expression -> getv','expression',1,'p_expression_factor','sbml.py',708),
  ('term -> INTEGER','term',1,'p_term_int1','sbml.py',712),
  ('term -> STRING','term',1,'p_term_string','sbml.py',715),
  ('term -> VAR','term',1,'p_term_var','sbml.py',718),
  ('term -> list','term',1,'p_term_list','sbml.py',721),
  ('term -> tupexp','term',1,'p_term_real1','sbml.py',724),
  ('term -> NUMBER','term',1,'p_factor_num','sbml.py',727),
  ('term -> BOOLEAN','term',1,'p_factor_boolean','sbml.py',730),
]
